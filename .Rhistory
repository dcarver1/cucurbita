rownames(dataSummary) <- c("SOS", "WUS in K13", "CWR in K13", "WEP")
dataSummary
#Initiate an empty dataframe
sosSummary2 <- data.frame()
# create the first row of the dataframe
sosCollection <- c(totalSamples, sosTotalUnique, uniqueWUS, percentWUS, uniqueCWR, percentCWR, uniqueWEP, percentWEP)
#bind the two df together
sosSummary2 <- rbind(sosSummary2, sosCollection)
#define column names and row names
rownames(sosSummary2) <- c("SOS Collection")
colnames(sosSummary2) <- c('Total Accessions', "Total Number Taxa", "Taxa that are WUS per K13", "Percent of SOS Accessions that are WUS per K13", "Taxa that are CWR per K13", "Percent of SOS Accessions that are CWR per K13", "Taxa that are WEP" , "Percentage of SOS Accessions that are WEP")
sosSummary2t <- t(sosSummary2)
### look up column that the unique number of taxa is being called on should be full name
### get the reference paper for WEP
genusWEP <- endDf[[3,4]]
genusWUS <- endDf[[2,4]]
genusCWR <- endDf[[1,4]]
# create the first row of the dataframe
sosCollection <- data.frame(totalSamples, sosTotalUnique, uniqueWUS, percentWUS, genusWUS, uniqueCWR, percentCWR, genusCWR, uniqueWEP, percentWEP, genusWEP)
#bind the two df together
sosSummary2 <- t(sosCollection)
#define column names and row names
colnames(sosSummary2) <- c("SOS Collection")
sosSummary2
sosSummary2t <- t(sosSummary2)
sosSummary2t
genusWEP <- endDf[[3,4]]
genusWUS <- endDf[[2,4]]
genusCWR <- endDf[[1,4]]
sosCollection <- data.frame(totalSamples, sosTotalUnique, uniqueWUS, percentWUS, genusWUS, uniqueCWR, percentCWR, genusCWR, uniqueWEP, percentWEP, genusWEP)
sosSummary2 <- t(sosCollection)
sosSummary2t <- bind_cols(tbl_df(labels), tbl_df(sosSummary2)) %>%
dplyr::rename( label = "V1" )
sosSummary2t
sosCollection
sosSummary2 <- data.frame()
sosCollection <- c(totalSamples, sosTotalUnique, uniqueWUS, percentWUS, uniqueCWR, percentCWR, uniqueWEP, percentWEP)
sosSummary2 <- rbind(sosSummary2, sosCollection)
rownames(sosSummary2) <- c("SOS Collection")
colnames(sosSummary2) <- c('Total Accessions', "Total Number Taxa", "Taxa that are WUS per K13", "Percent of SOS Accessions that are WUS per K13", "Taxa that are CWR per K13", "Percent of SOS Accessions that are CWR per K13", "Taxa that are WEP" , "Percentage of SOS Accessions that are WEP")
sosSummary2t
sosSummary2
sosSummary2t <- t(sosSummary2)
sosSummary2t
sosCollection <- c(totalSamples, sosTotalUnique, uniqueWUS, percentWUS, uniqueCWR, percentCWR, uniqueWEP, percentWEP)
sosCollection
sosCollection <- c(totalSamples, uniqueWUS, percentWUS, uniqueCWR, percentCWR, uniqueWEP, percentWEP)
sosCollection
sosTotalUnique <- unique(sosData$Taxon)
sosTotalUnique
sosTotalUnique <- n_distinct(sosData$Taxon)
sosTotalUnique <- n_distinct(sosData$Taxon)
sosData$Taxon <- sosData$NAME
sosTotalUnique <- n_distinct(sosData$Taxon)
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
sosData$Taxon <- sosData$NAME
sosTotalUnique <- n_distinct(sosData$Taxon)
sosTotalUnique
###
# Create a summary chart showing the total number of accession, total taxa, # of CWR NA, # eco NA, # of economic WEP
# this may be added to also include the data about what's managed by the usda and what's at the NLGRP
#
# Replace the name column of the sos data so that the "ssp." notation is replaced with "subsp." as defined
# by the grin Data base
#import SOS data
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
# created a new column that has the same col name as the K13 data set. I will use the col to join on
sosData$Taxon <- sosData$NAME
#detemine the total number of taxon in dataset
sosTotalUnique <- n_distinct(sosData$Taxon)
sosTotalUnique
# read in the K13 data
K13Data <- read.csv("H:\\SOS_Project\\analysisData\\CWR_US_inventory_2013_7_10.csv")
#detemine the total number of taxon in dataset
K13TotalUnique <- K13Data %>% n_distinct("Taxon")
# join the data sets and trim the data so that taxon that do not have values for the K13 specific data columns are dropped.
trimCombinedData <- left_join(sosData, K13Data, by='Taxon', type='left', match='all') %>%
filter(!is.na(Taxon_w_author))
typeSum <- trimCombinedData %>%
group_by(Type) %>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3), uniqueGenus = n_distinct(GENUS))
### read in WEP location data and filter to united states
wepLocal <- tbl_df(read.csv("H:\\SOS_Project\\analysisData\\Distributions&NativityOfSpeciesWithEconomicUses.csv")) %>%
filter(country_code == 'USA') %>%
dplyr::rename(Taxon = name) %>%
distinct(Taxon)
###
# read in the WEP data and Rename the name column to match the newly created column from the SOS data
wepData1 <- tbl_df(read.csv("H:\\SOS_Project\\analysisData\\EconomicUseCategoriesOfSpecies.csv")) %>%
dplyr::rename(Taxon = name)
#Unique Join for species in the USA
### the WEP data has repeats of features if they have more then 1 economic use. I'm joining again here so the taxa are only represented once.
WEPData <-left_join(wepLocal,wepData1, by="Taxon")
names(WEPData)
# join with sos data
combinedData2a <- inner_join(sosData, WEPData, by='Taxon', type='left', match='all') %>%
filter(!is.na(economic_usage_code)) %>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3),  uniqueGenus = n_distinct(GENUS)) %>%
mutate(Type = "wep")
endDf <- bind_rows(typeSum, combinedData2a)
#calculate total number of species from each dataset
uniqueWEP <- endDf[[3,2]]
uniqueWUS <- endDf[[2,2]]
uniqueCWR <- endDf[[1,2]]
#percent of sos in this class per dataset
percentWEP<- endDf[[3,3]]
percentWUS <-endDf[[2,3]]
percentCWR <-endDf[[1,3]]
#total number of genus per dataset
genusWEP <- endDf[[3,4]]
genusWUS <- endDf[[2,4]]
genusCWR <- endDf[[1,4]]
#Initiate an empty dataframe
allDataSummary <- data.frame()
# create the first row of the dataframe
sosData <- c( uniqueGen, uniqueSpe)
wusSamples <- K13Data %>% filter(Type=="WUS")
cwrSamples <-K13Data %>% filter(Type=="CWR")
# create K13 WEP/CWR
K13wus <- c( n_distinct(wusSamples$Genus), n_distinct(wusSamples$Taxon))
K13cwr <- c( n_distinct(cwrSamples$Genus), n_distinct(cwrSamples$Taxon))
### Just testing to relationship between
# cwrSamples %>%
#   group_by(Genus) %>%
#   dplyr::summarise(count = n()) %>%
#   arrange(desc(count))
#
# wusSamples %>%
#   group_by(Genus) %>%
#   dplyr::summarise(count = n()) %>%
#   arrange(desc(count))
#
## create same for world Economic plants takes some more work
# remove duplicates and separate based on full name into genus and species
wepSum <- WEPData %>% distinct(Taxon) %>% separate(Taxon, c("GENUS", "SPECIES"))
# subset data exclude all features with x as species
wepSum1 <- filter(wepSum, SPECIES != "x")
# preform the oppisite to pull all the avoids values out, needed a differtent method
wepX <- filter(WEPData, grepl(" x ", Taxon))
# seperate name then exclude xcolumn to construct a new dataframe
wepX1 <-  wepX %>% separate(Taxon, c("GENUS", "x", "SPECIES")) %>% select(GENUS, SPECIES)
# combine the two datasets to get a complete listing of genus and species
WEPgs <- bind_rows(wepSum1, wepX1)
# constuct a vector with the needed values
WEP <- c( as.numeric(n_distinct(WEPgs$GENUS)), as.numeric(n_distinct(WEPData$Taxon)))
#bind the two df together
dataSummary <- rbind(allDataSummary, sosData, K13wus, K13cwr, WEP)
#define column names and row names
colnames(dataSummary) <- c(  "Total Number of Genus", "Total Number of Species")
rownames(dataSummary) <- c("SOS", "WUS in K13", "CWR in K13", "WEP")
dataSummary
## I dont think I want to lose the row data by arranging it
#arrange(dataSummary, dataSummary$`Total Number of Genus`)
#Initiate an empty dataframe
sosSummary2 <- data.frame()
# create the first row of the dataframe
sosCollection <- c(totalSamples, sosTotalUnique,  uniqueWUS, percentWUS, uniqueCWR, percentCWR, uniqueWEP, percentWEP)
sosCollection
#bind the two df together
sosSummary2 <- rbind(sosSummary2, sosCollection)
#define column names and row names
rownames(sosSummary2) <- c("SOS Collection")
colnames(sosSummary2) <- c('Total Accessions', "Total Number Taxa", "Taxa that are WUS per K13", "Percent of SOS Accessions that are WUS per K13", "Taxa that are CWR per K13", "Percent of SOS Accessions that are CWR per K13", "Taxa that are WEP" , "Percentage of SOS Accessions that are WEP")
sosSummary2t <- t(sosSummary2)
sosSummary2t
### look up column that the unique number of taxa is being called on should be full name
### get the reference paper for WEP
genusWEP <- endDf[[3,4]]
genusWUS <- endDf[[2,4]]
genusCWR <- endDf[[1,4]]
# create the first row of the dataframe
sosCollection <- data.frame(totalSamples, sosTotalUnique, uniqueWUS, percentWUS, genusWUS, uniqueCWR, percentCWR, genusCWR, uniqueWEP, percentWEP, genusWEP)
#bind the two df together
sosSummary2 <- t(sosCollection)
#define column names and row names
colnames(sosSummary2) <- c("SOS Collection")
labels<- t(data.frame('Total Accessions', "Total Number Taxa", "Taxa that are WUS per K13", "Percent of SOS Accessions that are WUS per K13", "Genus that are WUS per K13", "Taxa that are CWR per K13", "Percent of SOS Accessions that are CWR per K13", "Genus that are CWR per K13","Taxa that are WEP" , "Percentage of SOS Accessions that are WEP", "Genus that are WEP"))
sosSummary2t <- bind_cols(tbl_df(labels), tbl_df(sosSummary2)) %>%
dplyr::rename( label = "V1" )
### look up column that the unique number of taxa is being called on should be full name
### get the reference paper for WEP
sosSummary2t
# read in GRIN Accessions
grinData <- tbl_df(read.csv("H:\\SOS_Project\\analysisData\\sosAllAccessions.csv")) %>%
mutate(NewTaxon = Taxon) %>%
separate(NewTaxon, c("genus", "species", "other1", "Other2", "other3"))
# calcualte the total number of features and the total number of taxon
totalSamplesGRIN <- nrow(grinData)# why would these two numbers be different? Question for Renee
totalTaxon <- dplyr::n_distinct(grinData$Taxon)
# join the the GRIN data with the K13 Dataset
combinedData3 <- left_join(grinData, K13Data, by='Taxon', type='left', match='all') %>%
filter(!is.na(Taxon_w_author))
#group by WEP and CWR and derive number of taxon and percent of sos that are those taxa
typeSum <- combinedData3 %>%
group_by(Type) %>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3), uniqueGenus = n_distinct(genus))
#complete the process again for Wp Taxa
combinedData3a <- inner_join(grinData, new1, by='Taxon', type='left', match='all') %>%
filter(!is.na(economic_usage_code))%>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3), uniqueGenus = n_distinct(genus)) %>%
mutate(Type = "WEP")
#generate a new df with all the values
endDf1 <- bind_rows(typeSum, combinedData3a)
#calculate total number of species from each dataset
uniqueWEP1 <- endDf1[[3,2]]
uniqueWUS1 <- endDf1[[2,2]]
uniqueCWR1 <- endDf1[[1,2]]
#percent of sos in this class per dataset
percentWEP1<- endDf1[[3,3]]
percentWUS1 <-endDf1[[2,3]]
percentCWR1 <-endDf1[[1,3]]
#total number of genus per dataset
genusWEP1 <- endDf1[[3,4]]
genusWUS1 <- endDf1[[2,4]]
genusCWR1 <- endDf1[[1,4]]
# create the first row of the dataframe
grinCollection <- c(totalSamplesGRIN, totalTaxon, uniqueWUS1, percentWUS1, genusWUS1, uniqueCWR1, percentCWR1, genusCWR1, uniqueWEP1, percentWEP1, genusWEP1)
#bind the two df together
sosSummary3 <- bind_cols(sosSummary2t, tbl_df(grinCollection)) %>%
dplyr::rename('SOS in GRIN Global' = value)
sosSummary3
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
# filter based on year collected and get a count on the number of unique accessions
sosPre2017 <- sosData %>%
filter(COLL_YR < 2017) %>%
nrow()
percentAtARS = signif(100*(totalSamplesGRIN/sosPre2017),4)
#import SOS data
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
#Find the total number of recorded entries
totalSamples <- nrow(sosData)
###
# Create a summary chart showing the total number of accession, total taxa, # of CWR NA, # eco NA, # of economic WEP
# this may be added to also include the data about what's managed by the usda and what's at the NLGRP
#
# Replace the name column of the sos data so that the "ssp." notation is replaced with "subsp." as defined
# by the grin Data base
#import SOS data
#sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
# created a new column that has the same col name as the K13 data set. I will use the col to join on
sosData$Taxon <- sosData$NAME
#detemine the total number of taxon in dataset
sosTotalUnique <- n_distinct(sosData$Taxon)
sosTotalUnique
# read in the K13 data
K13Data <- read.csv("H:\\SOS_Project\\analysisData\\CWR_US_inventory_2013_7_10.csv")
#detemine the total number of taxon in dataset
K13TotalUnique <- K13Data %>% n_distinct("Taxon")
# join the data sets and trim the data so that taxon that do not have values for the K13 specific data columns are dropped.
trimCombinedData <- left_join(sosData, K13Data, by='Taxon', type='left', match='all') %>%
filter(!is.na(Taxon_w_author))
typeSum <- trimCombinedData %>%
group_by(Type) %>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3), uniqueGenus = n_distinct(GENUS))
### read in WEP location data and filter to united states
wepLocal <- tbl_df(read.csv("H:\\SOS_Project\\analysisData\\Distributions&NativityOfSpeciesWithEconomicUses.csv")) %>%
filter(country_code == 'USA') %>%
dplyr::rename(Taxon = name) %>%
distinct(Taxon)
###
# read in the WEP data and Rename the name column to match the newly created column from the SOS data
wepData1 <- tbl_df(read.csv("H:\\SOS_Project\\analysisData\\EconomicUseCategoriesOfSpecies.csv")) %>%
dplyr::rename(Taxon = name)
#Unique Join for species in the USA
### the WEP data has repeats of features if they have more then 1 economic use. I'm joining again here so the taxa are only represented once.
WEPData <-left_join(wepLocal,wepData1, by="Taxon")
names(WEPData)
# join with sos data
combinedData2a <- inner_join(sosData, WEPData, by='Taxon', type='left', match='all') %>%
filter(!is.na(economic_usage_code)) %>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3),  uniqueGenus = n_distinct(GENUS)) %>%
mutate(Type = "wep")
endDf <- bind_rows(typeSum, combinedData2a)
#calculate total number of species from each dataset
uniqueWEP <- endDf[[3,2]]
uniqueWUS <- endDf[[2,2]]
uniqueCWR <- endDf[[1,2]]
#percent of sos in this class per dataset
percentWEP<- endDf[[3,3]]
percentWUS <-endDf[[2,3]]
percentCWR <-endDf[[1,3]]
#total number of genus per dataset
genusWEP <- endDf[[3,4]]
genusWUS <- endDf[[2,4]]
genusCWR <- endDf[[1,4]]
#Initiate an empty dataframe
allDataSummary <- data.frame()
# create the first row of the dataframe
sosData <- c( uniqueGen, uniqueSpe)
wusSamples <- K13Data %>% filter(Type=="WUS")
cwrSamples <-K13Data %>% filter(Type=="CWR")
# create K13 WEP/CWR
K13wus <- c( n_distinct(wusSamples$Genus), n_distinct(wusSamples$Taxon))
K13cwr <- c( n_distinct(cwrSamples$Genus), n_distinct(cwrSamples$Taxon))
### Just testing to relationship between
# cwrSamples %>%
#   group_by(Genus) %>%
#   dplyr::summarise(count = n()) %>%
#   arrange(desc(count))
#
# wusSamples %>%
#   group_by(Genus) %>%
#   dplyr::summarise(count = n()) %>%
#   arrange(desc(count))
#
## create same for world Economic plants takes some more work
# remove duplicates and separate based on full name into genus and species
wepSum <- WEPData %>% distinct(Taxon) %>% separate(Taxon, c("GENUS", "SPECIES"))
# subset data exclude all features with x as species
wepSum1 <- filter(wepSum, SPECIES != "x")
# preform the oppisite to pull all the avoids values out, needed a differtent method
wepX <- filter(WEPData, grepl(" x ", Taxon))
# seperate name then exclude xcolumn to construct a new dataframe
wepX1 <-  wepX %>% separate(Taxon, c("GENUS", "x", "SPECIES")) %>% select(GENUS, SPECIES)
# combine the two datasets to get a complete listing of genus and species
WEPgs <- bind_rows(wepSum1, wepX1)
# constuct a vector with the needed values
WEP <- c( as.numeric(n_distinct(WEPgs$GENUS)), as.numeric(n_distinct(WEPData$Taxon)))
#bind the two df together
dataSummary <- rbind(allDataSummary, sosData, K13wus, K13cwr, WEP)
#define column names and row names
colnames(dataSummary) <- c(  "Total Number of Genus", "Total Number of Species")
rownames(dataSummary) <- c("SOS", "WUS in K13", "CWR in K13", "WEP")
dataSummary
## I dont think I want to lose the row data by arranging it
#arrange(dataSummary, dataSummary$`Total Number of Genus`)
#Initiate an empty dataframe
sosSummary2 <- data.frame()
# create the first row of the dataframe
sosCollection <- c(totalSamples, sosTotalUnique,  uniqueWUS, percentWUS, uniqueCWR, percentCWR, uniqueWEP, percentWEP)
sosCollection
#bind the two df together
sosSummary2 <- rbind(sosSummary2, sosCollection)
#define column names and row names
rownames(sosSummary2) <- c("SOS Collection")
colnames(sosSummary2) <- c('Total Accessions', "Total Number Taxa", "Taxa that are WUS per K13", "Percent of SOS Accessions that are WUS per K13", "Taxa that are CWR per K13", "Percent of SOS Accessions that are CWR per K13", "Taxa that are WEP" , "Percentage of SOS Accessions that are WEP")
sosSummary2t <- t(sosSummary2)
sosSummary2t
### look up column that the unique number of taxa is being called on should be full name
### get the reference paper for WEP
genusWEP <- endDf[[3,4]]
genusWUS <- endDf[[2,4]]
genusCWR <- endDf[[1,4]]
# create the first row of the dataframe
sosCollection <- data.frame(totalSamples, sosTotalUnique, uniqueWUS, percentWUS, genusWUS, uniqueCWR, percentCWR, genusCWR, uniqueWEP, percentWEP, genusWEP)
#bind the two df together
sosSummary2 <- t(sosCollection)
#define column names and row names
colnames(sosSummary2) <- c("SOS Collection")
labels<- t(data.frame('Total Accessions', "Total Number Taxa", "Taxa that are WUS per K13", "Percent of SOS Accessions that are WUS per K13", "Genus that are WUS per K13", "Taxa that are CWR per K13", "Percent of SOS Accessions that are CWR per K13", "Genus that are CWR per K13","Taxa that are WEP" , "Percentage of SOS Accessions that are WEP", "Genus that are WEP"))
sosSummary2t <- bind_cols(tbl_df(labels), tbl_df(sosSummary2)) %>%
dplyr::rename( label = "V1" )
### look up column that the unique number of taxa is being called on should be full name
### get the reference paper for WEP
sosSummary2t
# read in GRIN Accessions
grinData <- tbl_df(read.csv("H:\\SOS_Project\\analysisData\\sosAllAccessions.csv")) %>%
mutate(NewTaxon = Taxon) %>%
separate(NewTaxon, c("genus", "species", "other1", "Other2", "other3"))
# calcualte the total number of features and the total number of taxon
totalSamplesGRIN <- nrow(grinData)# why would these two numbers be different? Question for Renee
totalTaxon <- dplyr::n_distinct(grinData$Taxon)
# join the the GRIN data with the K13 Dataset
combinedData3 <- left_join(grinData, K13Data, by='Taxon', type='left', match='all') %>%
filter(!is.na(Taxon_w_author))
#group by WEP and CWR and derive number of taxon and percent of sos that are those taxa
typeSum <- combinedData3 %>%
group_by(Type) %>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3), uniqueGenus = n_distinct(genus))
#complete the process again for Wp Taxa
combinedData3a <- inner_join(grinData, new1, by='Taxon', type='left', match='all') %>%
filter(!is.na(economic_usage_code))%>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3), uniqueGenus = n_distinct(genus)) %>%
mutate(Type = "WEP")
#generate a new df with all the values
endDf1 <- bind_rows(typeSum, combinedData3a)
#calculate total number of species from each dataset
uniqueWEP1 <- endDf1[[3,2]]
uniqueWUS1 <- endDf1[[2,2]]
uniqueCWR1 <- endDf1[[1,2]]
#percent of sos in this class per dataset
percentWEP1<- endDf1[[3,3]]
percentWUS1 <-endDf1[[2,3]]
percentCWR1 <-endDf1[[1,3]]
#total number of genus per dataset
genusWEP1 <- endDf1[[3,4]]
genusWUS1 <- endDf1[[2,4]]
genusCWR1 <- endDf1[[1,4]]
# create the first row of the dataframe
grinCollection <- c(totalSamplesGRIN, totalTaxon, uniqueWUS1, percentWUS1, genusWUS1, uniqueCWR1, percentCWR1, genusCWR1, uniqueWEP1, percentWEP1, genusWEP1)
#bind the two df together
sosSummary3 <- bind_cols(sosSummary2t, tbl_df(grinCollection)) %>%
dplyr::rename('SOS in GRIN Global' = value)
sosSummary3
# filter based on year collected and get a count on the number of unique accessions
sosPre2017 <- sosData %>%
filter(COLL_YR < 2017) %>%
nrow()
sosPre2017 <- sosData %>%
filter(COLL_YR < 2017)
sosPre2017 <- sosData %>%
filter(COLL_YR < 2017)
names(sosData)
#Initiate an empty dataframe
allDataSummary <- data.frame()
# create the first row of the dataframe
sosDataTotals <- c( uniqueGen, uniqueSpe)
wusSamples <- K13Data %>% filter(Type=="WUS")
cwrSamples <-K13Data %>% filter(Type=="CWR")
# create K13 WEP/CWR
K13wus <- c( n_distinct(wusSamples$Genus), n_distinct(wusSamples$Taxon))
K13cwr <- c( n_distinct(cwrSamples$Genus), n_distinct(cwrSamples$Taxon))
### Just testing to relationship between
# cwrSamples %>%
#   group_by(Genus) %>%
#   dplyr::summarise(count = n()) %>%
#   arrange(desc(count))
#
# wusSamples %>%
#   group_by(Genus) %>%
#   dplyr::summarise(count = n()) %>%
#   arrange(desc(count))
#
## create same for world Economic plants takes some more work
# remove duplicates and separate based on full name into genus and species
wepSum <- WEPData %>% distinct(Taxon) %>% separate(Taxon, c("GENUS", "SPECIES"))
# subset data exclude all features with x as species
wepSum1 <- filter(wepSum, SPECIES != "x")
# preform the oppisite to pull all the avoids values out, needed a differtent method
wepX <- filter(WEPData, grepl(" x ", Taxon))
# seperate name then exclude xcolumn to construct a new dataframe
wepX1 <-  wepX %>% separate(Taxon, c("GENUS", "x", "SPECIES")) %>% select(GENUS, SPECIES)
# combine the two datasets to get a complete listing of genus and species
WEPgs <- bind_rows(wepSum1, wepX1)
# constuct a vector with the needed values
WEP <- c( as.numeric(n_distinct(WEPgs$GENUS)), as.numeric(n_distinct(WEPData$Taxon)))
#bind the two df together
dataSummary <- rbind(allDataSummary, sosDataTotals, K13wus, K13cwr, WEP)
#define column names and row names
colnames(dataSummary) <- c(  "Total Number of Genus", "Total Number of Species")
rownames(dataSummary) <- c("SOS", "WUS in K13", "CWR in K13", "WEP")
dataSummary
## I dont think I want to lose the row data by arranging it
#arrange(dataSummary, dataSummary$`Total Number of Genus`)
#import SOS data
sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
#Find the total number of recorded entries
totalSamples <- nrow(sosData)
###
# Create a summary chart showing the total number of accession, total taxa, # of CWR NA, # eco NA, # of economic WEP
# this may be added to also include the data about what's managed by the usda and what's at the NLGRP
#
# Replace the name column of the sos data so that the "ssp." notation is replaced with "subsp." as defined
# by the grin Data base
#import SOS data
#sosData <- read.csv("H:\\SOS_Project\\analysisData\\SOSdata_20180614_forARS.csv")
# created a new column that has the same col name as the K13 data set. I will use the col to join on
sosData$Taxon <- sosData$NAME
#detemine the total number of taxon in dataset
sosTotalUnique <- n_distinct(sosData$Taxon)
# read in the K13 data
K13Data <- read.csv("H:\\SOS_Project\\analysisData\\CWR_US_inventory_2013_7_10.csv")
#detemine the total number of taxon in dataset
K13TotalUnique <- K13Data %>% n_distinct("Taxon")
# join the data sets and trim the data so that taxon that do not have values for the K13 specific data columns are dropped.
trimCombinedData <- left_join(sosData, K13Data, by='Taxon', type='left', match='all') %>%
filter(!is.na(Taxon_w_author))
typeSum <- trimCombinedData %>%
group_by(Type) %>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3), uniqueGenus = n_distinct(GENUS))
### read in WEP location data and filter to united states
wepLocal <- tbl_df(read.csv("H:\\SOS_Project\\analysisData\\Distributions&NativityOfSpeciesWithEconomicUses.csv")) %>%
filter(country_code == 'USA') %>%
dplyr::rename(Taxon = name) %>%
distinct(Taxon)
###
# read in the WEP data and Rename the name column to match the newly created column from the SOS data
wepData1 <- tbl_df(read.csv("H:\\SOS_Project\\analysisData\\EconomicUseCategoriesOfSpecies.csv")) %>%
dplyr::rename(Taxon = name)
#Unique Join for species in the USA
### the WEP data has repeats of features if they have more then 1 economic use. I'm joining again here so the taxa are only represented once.
WEPData <-left_join(wepLocal,wepData1, by="Taxon")
names(WEPData)
# join with sos data
combinedData2a <- inner_join(sosData, WEPData, by='Taxon', type='left', match='all') %>%
filter(!is.na(economic_usage_code)) %>%
dplyr::summarise(uniqueNumber = n_distinct(Taxon), percentType = signif(100*(n_distinct(Taxon) / totalSamples),3),  uniqueGenus = n_distinct(GENUS)) %>%
mutate(Type = "wep")
endDf <- bind_rows(typeSum, combinedData2a)
#calculate total number of species from each dataset
uniqueWEP <- endDf[[3,2]]
uniqueWUS <- endDf[[2,2]]
uniqueCWR <- endDf[[1,2]]
#percent of sos in this class per dataset
percentWEP<- endDf[[3,3]]
percentWUS <-endDf[[2,3]]
percentCWR <-endDf[[1,3]]
#total number of genus per dataset
genusWEP <- endDf[[3,4]]
genusWUS <- endDf[[2,4]]
genusCWR <- endDf[[1,4]]
names(sosData)
# filter based on year collected and get a count on the number of unique accessions
sosPre2017 <- sosData %>%
filter(COLL_YR < 2017)
%>%
names(sosData)
# filter based on year collected and get a count on the number of unique accessions
sosPre2017 <- sosData %>%
filter(COLL_YR < 2017)%>%
nrow()
percentAtARS = signif(100*(totalSamplesGRIN/sosPre2017),4)
